{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getDataAtual=()=>{const hoje=new Date();return hoje.toLocaleDateString();};const getHoraAtual=()=>{const agora=new Date();return agora.toLocaleTimeString();};function RegistroPonto(){const[hora,setHora]=useState(getHoraAtual());const[userId,setUserId]=useState(null);const[nome,setNome]=useState(\"\");const[registros,setRegistros]=useState([]);const[ctponto,setConsulta]=useState([]);const[tpPonto,setTpPonto]=useState(false);const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const[latitude,setLatitude]=useState(null);const[longitude,setLongitude]=useState(null);const[publicIP,setPublicIP]=useState(null);const[ultimatp_reg,setUltimatp_reg]=useState(0);const[localIPv4,setLocalIPv4]=useState(null);useEffect(()=>{const userIdFromStorage=Number(localStorage.getItem(\"userId\"));const nomeFromStorage=localStorage.getItem(\"nome\");setUserId(userIdFromStorage);setNome(nomeFromStorage);const intervalo=setInterval(()=>{setHora(getHoraAtual());},1000);getLocation();getLocalIPv4();if(userIdFromStorage){consultaPonto(userIdFromStorage);}return()=>clearInterval(intervalo);},[]);const consultaPonto=async idUsuario=>{const consultapt={userId:idUsuario,data:getDataAtual()};setLoading(true);try{const response=await axios.post(\"https://app-gestao-backend.vercel.app/auth/CTPonto\",consultapt);const registrosConsultados=response.data.registros.map(registro=>({id:registro.id,dt_ponto:registro.dt_ponto,tp_reg:registro.tp_reg,forma:registro.forma,hora:registro.hora}));if(registrosConsultados.length===0){setUltimatp_reg(1);}else{let maiortp_reg=0;registrosConsultados.forEach(registro=>{if(registro.tp_reg>=maiortp_reg){maiortp_reg=registro.tp_reg;}});setUltimatp_reg(maiortp_reg);}setConsulta(registrosConsultados);}catch(error){setError(\"Não há pontos registrados hoje\");}finally{setLoading(false);}};const getLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(showPosition);}else{console.log(\"Geolocalização não é suportada por este navegador.\");}};const showPosition=async position=>{const lat=position.coords.latitude;const lng=position.coords.longitude;setLatitude(lat);setLongitude(lng);const ip=await getPublicIP();setPublicIP(ip);};const getPublicIP=async()=>{try{const response=await axios.get(\"https://api.ipify.org?format=json\");const ip=response.data.ip;return ip;}catch(error){console.error(\"Erro ao obter endereço IP público:\",error);return null;}};const getLocalIPv4=()=>{try{const{RTCPeerConnection}=window;if(RTCPeerConnection){const connection=new RTCPeerConnection({iceServers:[]});connection.createDataChannel(\"\");connection.onicecandidate=async event=>{try{const candidate=event.candidate;if(candidate){const ipRegex=/([0-9]{1,3}(\\.[0-9]{1,3}){3})/;const match=ipRegex.exec(candidate.candidate);if(match&&match.length>=2){const localIPv4=match[1];setLocalIPv4(localIPv4);connection.close();}}}catch(error){console.error(\"Erro ao obter IPv4 local:\",error);}};connection.createOffer().then(offer=>connection.setLocalDescription(offer));}else{console.log(\"RTCPeerConnection não suportado.\");}}catch(error){console.error(\"Erro ao tentar obter IPv4 local:\",error);}};const registrarPonto=async()=>{const nvtp_reg=ultimatp_reg+1;const novoRegistro={data:getDataAtual(),hora:getHoraAtual(),tipo:nvtp_reg};setRegistros([...registros,novoRegistro]);setTpPonto(!tpPonto);setLoading(true);try{const response=await axios.post('https://app-gestao-backend.vercel.app/auth/RGPonto',{userId:userId,data:getDataAtual(),tp_reg:nvtp_reg,forma:parseInt('1'),hora:getHoraAtual(),latitude:latitude,longitude:longitude,ip:publicIP,ipv4:localIPv4});const{tp_reg,hora,forma,status}=response.data;localStorage.setItem('tp_reg',tp_reg);localStorage.setItem('hora',hora);localStorage.setItem('forma',forma);localStorage.setItem('status',status);}catch(error){setError('Erro ao registrar ponto');}finally{consultaPonto(userId);setLoading(false);}};const desBotao=ultimatp_reg===0?'Entrada':ultimatp_reg===1?'Saída':ultimatp_reg===2?'Entrada':'Saída';const descricaoBotao=ultimatp_reg===0?'Entrada':ultimatp_reg===1?'Saída':ultimatp_reg===2?'Entrada':'Saída';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Registro de ponto\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Nome: \",nome]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Registros:\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"ul\",{children:ctponto.map((registro,index)=>/*#__PURE__*/_jsxs(\"p\",{className:\"btn-app\",children:[registro.forma===1&&/*#__PURE__*/_jsx(\"span\",{children:\" Registro Autom\\xE1tico\"}),\" -\",registro.tp_reg===1&&/*#__PURE__*/_jsx(\"span\",{children:\" Entrada \"}),registro.tp_reg===2&&/*#__PURE__*/_jsx(\"span\",{children:\" Saida Almo\\xE7o \"}),registro.tp_reg===3&&/*#__PURE__*/_jsx(\"span\",{children:\" Volta Almo\\xE7o \"}),registro.tp_reg===4&&/*#__PURE__*/_jsx(\"span\",{children:\" Saida \"}),\"\\xC1s \",registro.hora]},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-app-\".concat(desBotao.toLowerCase()),onClick:registrarPonto,disabled:loading,children:loading?'Registrando...':\"Registrar \".concat(descricaoBotao,\" \\xE0s \").concat(hora)})]});}export default RegistroPonto;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","getDataAtual","hoje","Date","toLocaleDateString","getHoraAtual","agora","toLocaleTimeString","RegistroPonto","hora","setHora","userId","setUserId","nome","setNome","registros","setRegistros","ctponto","setConsulta","tpPonto","setTpPonto","error","setError","loading","setLoading","latitude","setLatitude","longitude","setLongitude","publicIP","setPublicIP","ultimatp_reg","setUltimatp_reg","localIPv4","setLocalIPv4","userIdFromStorage","Number","localStorage","getItem","nomeFromStorage","intervalo","setInterval","getLocation","getLocalIPv4","consultaPonto","clearInterval","idUsuario","consultapt","data","response","post","registrosConsultados","map","registro","id","dt_ponto","tp_reg","forma","length","maiortp_reg","forEach","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","lat","coords","lng","ip","getPublicIP","get","RTCPeerConnection","window","connection","iceServers","createDataChannel","onicecandidate","event","candidate","ipRegex","match","exec","close","createOffer","then","offer","setLocalDescription","registrarPonto","nvtp_reg","novoRegistro","tipo","parseInt","ipv4","status","setItem","desBotao","descricaoBotao","children","style","color","index","className","concat","toLowerCase","onClick","disabled"],"sources":["c:/Estudos Programação/Novos/app_gestao_frontend/src/componentes/Registropt.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst getDataAtual = () => {\r\n  const hoje = new Date();\r\n  return hoje.toLocaleDateString();\r\n};\r\n\r\nconst getHoraAtual = () => {\r\n  const agora = new Date();\r\n  return agora.toLocaleTimeString();\r\n};\r\n\r\nfunction RegistroPonto() {\r\n  const [hora, setHora] = useState(getHoraAtual());\r\n  const [userId, setUserId] = useState(null);\r\n  const [nome, setNome] = useState(\"\");\r\n  const [registros, setRegistros] = useState([]);\r\n  const [ctponto, setConsulta] = useState([]);\r\n  const [tpPonto, setTpPonto] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [latitude, setLatitude] = useState(null);\r\n  const [longitude, setLongitude] = useState(null);\r\n  const [publicIP, setPublicIP] = useState(null);\r\n  const [ultimatp_reg, setUltimatp_reg] = useState(0);\r\n  const [localIPv4, setLocalIPv4] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userIdFromStorage = Number(localStorage.getItem(\"userId\"));\r\n    const nomeFromStorage = localStorage.getItem(\"nome\");\r\n    setUserId(userIdFromStorage);\r\n    setNome(nomeFromStorage);\r\n\r\n    const intervalo = setInterval(() => {\r\n      setHora(getHoraAtual());\r\n    }, 1000);\r\n\r\n    getLocation();\r\n    getLocalIPv4();\r\n    if (userIdFromStorage) {\r\n      consultaPonto(userIdFromStorage);\r\n    }\r\n\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  const consultaPonto = async (idUsuario) => {\r\n    const consultapt = { userId: idUsuario, data: getDataAtual() };\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://app-gestao-backend.vercel.app/auth/CTPonto\",\r\n        consultapt\r\n      );\r\n\r\n      const registrosConsultados = response.data.registros.map((registro) => ({\r\n        id: registro.id,\r\n        dt_ponto: registro.dt_ponto,\r\n        tp_reg: registro.tp_reg,\r\n        forma: registro.forma,\r\n        hora: registro.hora,\r\n      }));\r\n      if (registrosConsultados.length === 0) {\r\n        setUltimatp_reg(1);\r\n      } else {\r\n        let maiortp_reg = 0;\r\n\r\n        registrosConsultados.forEach((registro) => {\r\n          if (registro.tp_reg >= maiortp_reg) {\r\n            maiortp_reg = registro.tp_reg;\r\n          }\r\n        });\r\n        setUltimatp_reg(maiortp_reg);\r\n      }\r\n\r\n      setConsulta(registrosConsultados);\r\n    } catch (error) {\r\n      setError(\"Não há pontos registrados hoje\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      console.log(\"Geolocalização não é suportada por este navegador.\");\r\n    }\r\n  };\r\n\r\n  const showPosition = async (position) => {\r\n    const lat = position.coords.latitude;\r\n    const lng = position.coords.longitude;\r\n    setLatitude(lat);\r\n    setLongitude(lng);\r\n\r\n    const ip = await getPublicIP();\r\n    setPublicIP(ip);\r\n  };\r\n\r\n  const getPublicIP = async () => {\r\n    try {\r\n      const response = await axios.get(\"https://api.ipify.org?format=json\");\r\n      const ip = response.data.ip;\r\n      return ip;\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter endereço IP público:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getLocalIPv4 = () => {\r\n    try {\r\n      const { RTCPeerConnection } = window;\r\n      if (RTCPeerConnection) {\r\n        const connection = new RTCPeerConnection({ iceServers: [] });\r\n        connection.createDataChannel(\"\");\r\n        connection.onicecandidate = async (event) => {\r\n          try {\r\n            const candidate = event.candidate;\r\n            if (candidate) {\r\n              const ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/;\r\n              const match = ipRegex.exec(candidate.candidate);\r\n              if (match && match.length >= 2) {\r\n                const localIPv4 = match[1];\r\n                setLocalIPv4(localIPv4);\r\n                connection.close();\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Erro ao obter IPv4 local:\", error);\r\n          }\r\n        };\r\n        connection\r\n          .createOffer()\r\n          .then((offer) => connection.setLocalDescription(offer));\r\n      } else {\r\n        console.log(\"RTCPeerConnection não suportado.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao tentar obter IPv4 local:\", error);\r\n    }\r\n  };\r\n\r\n    const registrarPonto = async () => {\r\n        const nvtp_reg = ultimatp_reg +1;\r\n        const novoRegistro = { data: getDataAtual(), hora: getHoraAtual(), tipo: nvtp_reg };\r\n        setRegistros([...registros, novoRegistro]);\r\n        setTpPonto(!tpPonto);\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('https://app-gestao-backend.vercel.app/auth/RGPonto', {\r\n                userId: userId,\r\n                data: getDataAtual(),\r\n                tp_reg: nvtp_reg,\r\n                forma: parseInt('1'),\r\n                hora: getHoraAtual(),\r\n                latitude: latitude,\r\n                longitude: longitude,\r\n                ip: publicIP,\r\n                ipv4: localIPv4\r\n            });\r\n\r\n            const { tp_reg, hora, forma, status } = response.data;\r\n            localStorage.setItem('tp_reg', tp_reg);\r\n            localStorage.setItem('hora', hora);\r\n            localStorage.setItem('forma', forma);\r\n            localStorage.setItem('status', status);\r\n\r\n        } catch (error) {\r\n            setError('Erro ao registrar ponto');\r\n        } finally {\r\n            consultaPonto(userId);\r\n            setLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const desBotao = ultimatp_reg === 0\r\n    ? 'Entrada'\r\n    : ultimatp_reg === 1\r\n    ? 'Saída'\r\n    : ultimatp_reg === 2\r\n    ? 'Entrada'\r\n    : 'Saída';\r\n\r\n    const descricaoBotao = ultimatp_reg === 0 ? 'Entrada' \r\n    : ultimatp_reg === 1 ? 'Saída'\r\n    : ultimatp_reg === 2 ? 'Entrada'\r\n    : 'Saída';\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Registro de ponto</h2>\r\n            <p>Nome: {nome}</p>\r\n            <h3>Registros:</h3>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {ctponto.map((registro, index) => (\r\n                    <p className='btn-app' key={index}>\r\n                        {registro.forma === 1 && <span> Registro Automático</span>} - \r\n                        {registro.tp_reg === 1 && <span> Entrada </span>}\r\n                        {registro.tp_reg === 2 && <span> Saida Almoço </span>}\r\n                        {registro.tp_reg === 3 && <span> Volta Almoço </span>}\r\n                        {registro.tp_reg === 4 && <span> Saida </span>}\r\n\r\n                         \r\n                        Ás {registro.hora}\r\n                    </p>\r\n                ))}\r\n            </ul>\r\n            <button className={`btn-app-${desBotao.toLowerCase()}`} onClick={registrarPonto} disabled={loading}>\r\n                {loading ? 'Registrando...' : `Registrar ${descricaoBotao} às ${hora}`}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistroPonto;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}