{"ast":null,"code":"var _jsxFileName = \"c:\\\\Estudos probrama\\xE7\\xE3o\\\\My_ponto\\\\My_ponto\\\\frontend\\\\app\\\\src\\\\componentes\\\\Registropt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDataAtual = () => {\n  const hoje = new Date();\n  return hoje.toLocaleDateString();\n};\nconst getHoraAtual = () => {\n  const agora = new Date();\n  return agora.toLocaleTimeString();\n};\nfunction RegistroPonto() {\n  _s();\n  const [hora, setHora] = useState(getHoraAtual());\n  const [userId, setUserId] = useState(null);\n  const [nome, setNome] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [consultapt, setConsulta] = useState([]);\n  const [tpPonto, setTpPonto] = useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [publicIP, setPublicIP] = useState(null);\n  const [localIPv4, setLocalIPv4] = useState(null);\n  useEffect(() => {\n    const userIdFromStorage = Number(localStorage.getItem('userId'));\n    const nomeFromStorage = localStorage.getItem('nome');\n    setUserId(userIdFromStorage);\n    setNome(nomeFromStorage);\n    const intervalo = setInterval(() => {\n      setHora(getHoraAtual());\n    }, 1000);\n    getLocation();\n    getLocalIPv4();\n    consultaPonto();\n    return () => clearInterval(intervalo);\n  }, []);\n  const consultaPonto = async () => {\n    const consultaData = {\n      userId: userId,\n      data: getDataAtual()\n    };\n    setConsulta([...consultapt, consultaData]);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/auth/CTPonto', consultaData);\n      const {\n        id,\n        tp_reg,\n        hora,\n        forma\n      } = response.data;\n      localStorage.setItem('id', id);\n      localStorage.setItem('tp_reg', tp_reg);\n      localStorage.setItem('hora', hora);\n      localStorage.setItem('forma', forma);\n    } catch (error) {\n      setError('Não há pontos registrados hoje');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"Geolocalização não é suportada por este navegador.\");\n    }\n  };\n  const showPosition = async position => {\n    const lat = position.coords.latitude;\n    const lng = position.coords.longitude;\n    setLatitude(lat);\n    setLongitude(lng);\n    const ip = await getPublicIP();\n    setPublicIP(ip);\n  };\n  const getPublicIP = async () => {\n    try {\n      const response = await axios.get('https://api.ipify.org?format=json');\n      const ip = response.data.ip;\n      return ip;\n    } catch (error) {\n      console.error(\"Erro ao obter endereço IP público:\", error);\n      return null;\n    }\n  };\n  const getLocalIPv4 = () => {\n    // Tenta obter o IPv4 local usando a conexão de rede do navegador\n    try {\n      const {\n        RTCPeerConnection\n      } = window;\n      if (RTCPeerConnection) {\n        const connection = new RTCPeerConnection({\n          iceServers: []\n        });\n        connection.createDataChannel('');\n        connection.onicecandidate = async event => {\n          try {\n            const candidate = event.candidate;\n            if (candidate) {\n              const ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/;\n              const match = ipRegex.exec(candidate.candidate);\n              if (match && match.length >= 2) {\n                const localIPv4 = match[1];\n                setLocalIPv4(localIPv4);\n                connection.close();\n              }\n            }\n          } catch (error) {\n            console.error(\"Erro ao obter IPv4 local:\", error);\n          }\n        };\n        connection.createOffer().then(offer => connection.setLocalDescription(offer));\n      } else {\n        console.log(\"RTCPeerConnection não suportado.\");\n      }\n    } catch (error) {\n      console.error(\"Erro ao tentar obter IPv4 local:\", error);\n    }\n  };\n  const registrarPonto = async () => {\n    const tipoPonto = tpPonto ? 'saída' : 'entrada';\n    const novoRegistro = {\n      data: getDataAtual(),\n      hora: getHoraAtual(),\n      tipo: tipoPonto\n    };\n    setRegistros([...registros, novoRegistro]);\n    setTpPonto(!tpPonto);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3001/auth/RGPonto', {\n        userId: userId,\n        data: getDataAtual(),\n        hora: getHoraAtual(),\n        latitude: latitude,\n        longitude: longitude,\n        ip: publicIP,\n        ipv4: localIPv4 // Inclui o IPv4 local no payload da requisição\n      });\n      const {\n        tp_reg,\n        hora,\n        forma,\n        status\n      } = response.data;\n      localStorage.setItem('tp_reg', tp_reg);\n      localStorage.setItem('hora', hora);\n      localStorage.setItem('forma', forma);\n      localStorage.setItem('status', status);\n    } catch (error) {\n      setError('Não há pontos registrados hoje');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const descricaoBotao = tpPonto ? 'Saída' : 'Entrada';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nome: \", nome]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", latitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitude: \", longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Endere\\xE7o IP p\\xFAblico: \", publicIP]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Endere\\xE7o IPv4 local: \", localIPv4]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn-app-${descricaoBotao.toLowerCase()}`,\n      onClick: registrarPonto,\n      disabled: loading,\n      children: loading ? 'Registrando...' : `Registrar ${descricaoBotao} às ${hora}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registros:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: registros.map((registro, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [registro.data, \" - \", registro.hora, \" (\", registro.tipo, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistroPonto, \"+vejnoCix6TLlIpc7MUi5QQEHHw=\");\n_c = RegistroPonto;\nexport default RegistroPonto;\nvar _c;\n$RefreshReg$(_c, \"RegistroPonto\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","getDataAtual","hoje","Date","toLocaleDateString","getHoraAtual","agora","toLocaleTimeString","RegistroPonto","_s","hora","setHora","userId","setUserId","nome","setNome","registros","setRegistros","consultapt","setConsulta","tpPonto","setTpPonto","error","setError","loading","setLoading","latitude","setLatitude","longitude","setLongitude","publicIP","setPublicIP","localIPv4","setLocalIPv4","userIdFromStorage","Number","localStorage","getItem","nomeFromStorage","intervalo","setInterval","getLocation","getLocalIPv4","consultaPonto","clearInterval","consultaData","data","response","post","id","tp_reg","forma","setItem","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","lat","coords","lng","ip","getPublicIP","get","RTCPeerConnection","window","connection","iceServers","createDataChannel","onicecandidate","event","candidate","ipRegex","match","exec","length","close","createOffer","then","offer","setLocalDescription","registrarPonto","tipoPonto","novoRegistro","tipo","ipv4","status","descricaoBotao","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toLowerCase","onClick","disabled","style","color","map","registro","index","_c","$RefreshReg$"],"sources":["c:/Estudos probramação/My_ponto/My_ponto/frontend/app/src/componentes/Registropt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst getDataAtual = () => {\r\n    const hoje = new Date();\r\n    return hoje.toLocaleDateString();\r\n};\r\n\r\nconst getHoraAtual = () => {\r\n    const agora = new Date();\r\n    return agora.toLocaleTimeString();\r\n};\r\n\r\nfunction RegistroPonto() {\r\n    const [hora, setHora] = useState(getHoraAtual());\r\n    const [userId, setUserId] = useState(null);\r\n    const [nome, setNome] = useState('');\r\n    const [registros, setRegistros] = useState([]);\r\n    const [consultapt, setConsulta] = useState([]);\r\n    const [tpPonto, setTpPonto] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n    const [publicIP, setPublicIP] = useState(null);\r\n    const [localIPv4, setLocalIPv4] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const userIdFromStorage = Number(localStorage.getItem('userId'));\r\n        const nomeFromStorage = localStorage.getItem('nome');\r\n        setUserId(userIdFromStorage);\r\n        setNome(nomeFromStorage);\r\n\r\n        const intervalo = setInterval(() => {\r\n            setHora(getHoraAtual());\r\n        }, 1000);\r\n\r\n        getLocation();\r\n        getLocalIPv4();\r\n        consultaPonto();\r\n\r\n        return () => clearInterval(intervalo);\r\n    }, []);\r\n\r\n    const consultaPonto = async () => {\r\n        const consultaData = { userId: userId, data: getDataAtual() };\r\n        setConsulta([...consultapt, consultaData]);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/auth/CTPonto', consultaData);\r\n\r\n            const {id, tp_reg, hora, forma} = response.data;\r\n            localStorage.setItem('id', id);\r\n            localStorage.setItem('tp_reg', tp_reg);\r\n            localStorage.setItem('hora', hora);\r\n            localStorage.setItem('forma', forma);\r\n      \r\n        } catch (error) {\r\n            setError('Não há pontos registrados hoje');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            console.log(\"Geolocalização não é suportada por este navegador.\");\r\n        }\r\n    };\r\n\r\n    const showPosition = async (position) => {\r\n        const lat = position.coords.latitude;\r\n        const lng = position.coords.longitude;\r\n        setLatitude(lat);\r\n        setLongitude(lng);\r\n\r\n        const ip = await getPublicIP();\r\n        setPublicIP(ip);\r\n    };\r\n\r\n    const getPublicIP = async () => {\r\n        try {\r\n            const response = await axios.get('https://api.ipify.org?format=json');\r\n            const ip = response.data.ip;\r\n            return ip;\r\n        } catch (error) {\r\n            console.error(\"Erro ao obter endereço IP público:\", error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const getLocalIPv4 = () => {\r\n        // Tenta obter o IPv4 local usando a conexão de rede do navegador\r\n        try {\r\n            const { RTCPeerConnection } = window;\r\n            if (RTCPeerConnection) {\r\n                const connection = new RTCPeerConnection({ iceServers: [] });\r\n                connection.createDataChannel('');\r\n                connection.onicecandidate = async (event) => {\r\n                    try {\r\n                        const candidate = event.candidate;\r\n                        if (candidate) {\r\n                            const ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/;\r\n                            const match = ipRegex.exec(candidate.candidate);\r\n                            if (match && match.length >= 2) {\r\n                                const localIPv4 = match[1];\r\n                                setLocalIPv4(localIPv4);\r\n                                connection.close();\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(\"Erro ao obter IPv4 local:\", error);\r\n                    }\r\n                };\r\n                connection.createOffer().then(offer => connection.setLocalDescription(offer));\r\n            } else {\r\n                console.log(\"RTCPeerConnection não suportado.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao tentar obter IPv4 local:\", error);\r\n        }\r\n    };\r\n\r\n    const registrarPonto = async () => {\r\n        const tipoPonto = tpPonto ? 'saída' : 'entrada';\r\n        const novoRegistro = { data: getDataAtual(), hora: getHoraAtual(), tipo: tipoPonto };\r\n        setRegistros([...registros, novoRegistro]);\r\n        setTpPonto(!tpPonto);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/auth/RGPonto', {\r\n                userId: userId,\r\n                data: getDataAtual(),\r\n                hora: getHoraAtual(),\r\n                latitude: latitude,\r\n                longitude: longitude,\r\n                ip: publicIP,\r\n                ipv4: localIPv4 // Inclui o IPv4 local no payload da requisição\r\n            });\r\n\r\n            const { tp_reg, hora, forma, status } = response.data;\r\n            localStorage.setItem('tp_reg', tp_reg);\r\n            localStorage.setItem('hora', hora);\r\n            localStorage.setItem('forma', forma);\r\n            localStorage.setItem('status', status);\r\n\r\n        } catch (error) {\r\n            setError('Não há pontos registrados hoje');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const descricaoBotao = tpPonto ? 'Saída' : 'Entrada';\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registro de ponto</h2>\r\n            <p>Nome: {nome}</p>\r\n            <p>User ID: {userId}</p>\r\n            <p>Latitude: {latitude}</p>\r\n            <p>Longitude: {longitude}</p>\r\n            <p>Endereço IP público: {publicIP}</p>\r\n            <p>Endereço IPv4 local: {localIPv4}</p>\r\n            <button className={`btn-app-${descricaoBotao.toLowerCase()}`} onClick={registrarPonto} disabled={loading}>\r\n                {loading ? 'Registrando...' : `Registrar ${descricaoBotao} às ${hora}`}\r\n            </button>\r\n            <h3>Registros:</h3>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {registros.map((registro, index) => (\r\n                    <li key={index}>\r\n                        {registro.data} - {registro.hora} ({registro.tipo})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistroPonto;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}