{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import md5 from'md5';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function formatCPF(value){// Remove qualquer caractere que não seja número\nvalue=value.replace(/\\D/g,'');// Adiciona pontos e hífen conforme necessário\nif(value.length>9){value=value.replace(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/,'$1.$2.$3-$4');}else if(value.length>6){value=value.replace(/^(\\d{3})(\\d{3})(\\d{3})/,'$1.$2.$3');}else if(value.length>3){value=value.replace(/^(\\d{3})(\\d{3})/,'$1.$2');}return value;}function formatCelular(value){// Remove qualquer caractere que não seja número\nvalue=value.replace(/\\D/g,'');// Adiciona pontos e hífen conforme necessário\nif(value.length>4){value=value.replace(/^(\\d{2})(\\d{5})(\\d{4})/,'($1) $2-$3');}else if(value.length>3){value=value.replace(/^(\\d{2})(\\d{5})/,'($1) $2');}return value;}function Cadastro(){const[nome,setNome]=useState('');const[sobrenome,setSobrenome]=useState('');const[usuario,setUsuario]=useState('');const[cpf,setCPF]=useState('');const[email,setEmail]=useState('');const[celular,setCelular]=useState('');const[password,setPassword]=useState('');const[passwordConfir,setPasswordConfir]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);const[userId,setUserId]=useState(null);// Estado para armazenar o ID do usuário\nconst handleCadastro=async e=>{e.preventDefault();setLoading(true);setError('');if(password!==passwordConfir){setError('As senhas não coincidem.');setLoading(false);return;}// Exemplo de criptografia de senha com MD5 (não recomendado para produção)\nconst hashedPassword=md5(password);try{const response=await axios.post('https://app-gestao-backend.vercel.app/cadastro',{nome,sobrenome,usuario,cpf,email,celular,password:hashedPassword});console.log('Cadastro realizado com sucesso');// Extraindo o ID do usuário da resposta\nconst{id}=response.data;setUserId(id);// Atualiza o estado com o ID do usuário\n// Lógica adicional após o cadastro\n}catch(error){console.error('Erro ao fazer cadastro:',error);setError('Erro ao fazer cadastro. Verifique suas informações.');}finally{setLoading(false);}};const handleCPFChange=e=>{const formattedCPF=formatCPF(e.target.value);setCPF(formattedCPF);};const handleCelularChange=e=>{const formattedCelular=formatCelular(e.target.value);setCelular(formattedCelular);};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-form-wrap\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cadastro\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleCadastro,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nome\",placeholder:\"Nome\",required:true,value:nome,onChange:e=>setNome(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"sobrenome\",placeholder:\"Sobrenome\",required:true,value:sobrenome,onChange:e=>setSobrenome(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"usuario\",placeholder:\"Usu\\xE1rio\",required:true,value:usuario,onChange:e=>setUsuario(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"cpf\",placeholder:\"CPF\",required:true,value:cpf,onChange:handleCPFChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"E-mail\",required:true,value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"celular\",placeholder:\"Celular\",required:true,value:celular,onChange:handleCelularChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"senha\",placeholder:\"Senha\",required:true,value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirSenha\",placeholder:\"Confirme a Senha\",required:true,value:passwordConfir,onChange:e=>setPasswordConfir(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-login\",disabled:loading,children:loading?'Carregando...':'Cadastrar'}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),userId&&/*#__PURE__*/_jsxs(\"p\",{children:[\"ID do usu\\xE1rio: \",userId]})]})]});}export default Cadastro;","map":{"version":3,"names":["React","useState","axios","md5","jsx","_jsx","jsxs","_jsxs","formatCPF","value","replace","length","formatCelular","Cadastro","nome","setNome","sobrenome","setSobrenome","usuario","setUsuario","cpf","setCPF","email","setEmail","celular","setCelular","password","setPassword","passwordConfir","setPasswordConfir","error","setError","loading","setLoading","userId","setUserId","handleCadastro","e","preventDefault","hashedPassword","response","post","console","log","id","data","handleCPFChange","formattedCPF","target","handleCelularChange","formattedCelular","className","children","onSubmit","type","name","placeholder","required","onChange","disabled"],"sources":["c:/Estudos Programação/Novos/app_gestao_frontend/src/componentes/Cadastro.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport md5 from 'md5';\r\n\r\nfunction formatCPF(value) {\r\n    // Remove qualquer caractere que não seja número\r\n    value = value.replace(/\\D/g, '');\r\n\r\n    // Adiciona pontos e hífen conforme necessário\r\n    if (value.length > 9) {\r\n        value = value.replace(/^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/, '$1.$2.$3-$4');\r\n    } else if (value.length > 6) {\r\n        value = value.replace(/^(\\d{3})(\\d{3})(\\d{3})/, '$1.$2.$3');\r\n    } else if (value.length > 3) {\r\n        value = value.replace(/^(\\d{3})(\\d{3})/, '$1.$2');\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction formatCelular(value) {\r\n    // Remove qualquer caractere que não seja número\r\n    value = value.replace(/\\D/g, '');\r\n\r\n    // Adiciona pontos e hífen conforme necessário\r\n    if (value.length > 4) {\r\n        value = value.replace(/^(\\d{2})(\\d{5})(\\d{4})/, '($1) $2-$3');\r\n    } else if (value.length > 3) {\r\n        value = value.replace(/^(\\d{2})(\\d{5})/, '($1) $2');\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction Cadastro() {\r\n    const [nome, setNome] = useState('');\r\n    const [sobrenome, setSobrenome] = useState('');\r\n    const [usuario, setUsuario] = useState('');\r\n    const [cpf, setCPF] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [celular, setCelular] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfir, setPasswordConfir] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [userId, setUserId] = useState(null); // Estado para armazenar o ID do usuário\r\n\r\n    const handleCadastro = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        if (password !== passwordConfir) {\r\n            setError('As senhas não coincidem.');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        // Exemplo de criptografia de senha com MD5 (não recomendado para produção)\r\n        const hashedPassword = md5(password);\r\n\r\n        try {\r\n            const response = await axios.post('https://app-gestao-backend.vercel.app/cadastro', {\r\n                nome,\r\n                sobrenome,\r\n                usuario,\r\n                cpf,\r\n                email,\r\n                celular,\r\n                password: hashedPassword\r\n            });\r\n\r\n            console.log('Cadastro realizado com sucesso');\r\n\r\n            // Extraindo o ID do usuário da resposta\r\n            const { id } = response.data;\r\n            setUserId(id); // Atualiza o estado com o ID do usuário\r\n\r\n            // Lógica adicional após o cadastro\r\n\r\n        } catch (error) {\r\n            console.error('Erro ao fazer cadastro:', error);\r\n            setError('Erro ao fazer cadastro. Verifique suas informações.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCPFChange = (e) => {\r\n        const formattedCPF = formatCPF(e.target.value);\r\n        setCPF(formattedCPF);\r\n    };\r\n\r\n    const handleCelularChange = (e) => {\r\n        const formattedCelular = formatCelular(e.target.value);\r\n        setCelular(formattedCelular);\r\n    };\r\n\r\n    return (\r\n        <div className='login-form-wrap'>\r\n            <h2>Cadastro</h2>\r\n            <form className='login-form' onSubmit={handleCadastro}>\r\n                <input\r\n                    type='text'\r\n                    name='nome'\r\n                    placeholder='Nome'\r\n                    required\r\n                    value={nome}\r\n                    onChange={(e) => setNome(e.target.value)}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    name='sobrenome'\r\n                    placeholder='Sobrenome'\r\n                    required\r\n                    value={sobrenome}\r\n                    onChange={(e) => setSobrenome(e.target.value)}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    name='usuario'\r\n                    placeholder='Usuário'\r\n                    required\r\n                    value={usuario}\r\n                    onChange={(e) => setUsuario(e.target.value)}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    name='cpf'\r\n                    placeholder='CPF'\r\n                    required\r\n                    value={cpf}\r\n                    onChange={handleCPFChange}\r\n                />\r\n                <input\r\n                    type='email'\r\n                    name='email'\r\n                    placeholder='E-mail'\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    name='celular'\r\n                    placeholder='Celular'\r\n                    required\r\n                    value={celular}\r\n                    onChange={handleCelularChange}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    name='senha'\r\n                    placeholder='Senha'\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    name='confirSenha'\r\n                    placeholder='Confirme a Senha'\r\n                    required\r\n                    value={passwordConfir}\r\n                    onChange={(e) => setPasswordConfir(e.target.value)}\r\n                />\r\n                <button type='submit' className='btn-login' disabled={loading}>\r\n                    {loading ? 'Carregando...' : 'Cadastrar'}\r\n                </button>\r\n                {error && <p className='error'>{error}</p>}\r\n                {userId && <p>ID do usuário: {userId}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cadastro;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}