{"ast":null,"code":"var _jsxFileName = \"c:\\\\Estudos probrama\\xE7\\xE3o\\\\My_ponto\\\\My_ponto\\\\frontend\\\\app\\\\src\\\\componentes\\\\Registropt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Função para obter a data atual formatada\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDataAtual = () => {\n  const hoje = new Date();\n  return hoje.toLocaleDateString();\n};\n\n// Função para obter a hora atual formatada\nconst getHoraAtual = () => {\n  const agora = new Date();\n  return agora.toLocaleTimeString();\n};\nfunction RegistroPonto() {\n  _s();\n  const data = getDataAtual();\n  const [hora, setHora] = useState(getHoraAtual());\n  const [userId, setUserId] = useState(null);\n  const [nome, setNome] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [tpPonto, setTpPonto] = useState(false); // Inicializa tp_ponto como false\n\n  useEffect(() => {\n    const userIdFromStorage = Number(localStorage.getItem('userId'));\n    const nomeFromStorage = localStorage.getItem('nome');\n    setUserId(userIdFromStorage);\n    setNome(nomeFromStorage);\n    const intervalo = setInterval(() => {\n      setHora(getHoraAtual());\n    }, 1000);\n\n    // Limpar intervalo ao desmontar o componente\n    return () => clearInterval(intervalo);\n  }, []);\n  const registrarPonto = () => {\n    const tipoPonto = tpPonto ? 'saída' : 'entrada';\n    const novoRegistro = {\n      data: getDataAtual(),\n      hora: getHoraAtual(),\n      tipo: tipoPonto\n    };\n    setRegistros([...registros, novoRegistro]);\n    setTpPonto(!tpPonto);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nome: \", nome]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Pontos do dia \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hora: \", hora]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-app-{tpPonto}\",\n      onClick: registrarPonto,\n      children: [\"Registrar \", tpPonto, \" as \", hora]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registros:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: registros.map((registro, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [registro.data, \" - \", registro.hora, \" (\", registro.tipo, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistroPonto, \"9J+Tl2aJxuAKpogTqkoGgDEiIH0=\");\n_c = RegistroPonto;\nexport default RegistroPonto;\nvar _c;\n$RefreshReg$(_c, \"RegistroPonto\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getDataAtual","hoje","Date","toLocaleDateString","getHoraAtual","agora","toLocaleTimeString","RegistroPonto","_s","data","hora","setHora","userId","setUserId","nome","setNome","registros","setRegistros","tpPonto","setTpPonto","userIdFromStorage","Number","localStorage","getItem","nomeFromStorage","intervalo","setInterval","clearInterval","registrarPonto","tipoPonto","novoRegistro","tipo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","registro","index","_c","$RefreshReg$"],"sources":["c:/Estudos probramação/My_ponto/My_ponto/frontend/app/src/componentes/Registropt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Função para obter a data atual formatada\r\nconst getDataAtual = () => {\r\n    const hoje = new Date();\r\n    return hoje.toLocaleDateString();\r\n};\r\n\r\n// Função para obter a hora atual formatada\r\nconst getHoraAtual = () => {\r\n    const agora = new Date();\r\n    return agora.toLocaleTimeString();\r\n};\r\n\r\nfunction RegistroPonto() {\r\n    const data = getDataAtual();\r\n    const [hora, setHora] = useState(getHoraAtual());\r\n    const [userId, setUserId] = useState(null);\r\n    const [nome, setNome] = useState('');\r\n    const [registros, setRegistros] = useState([]);\r\n    const [tpPonto, setTpPonto] = useState(false); // Inicializa tp_ponto como false\r\n\r\n    useEffect(() => {\r\n        const userIdFromStorage = Number(localStorage.getItem('userId'));\r\n        const nomeFromStorage = localStorage.getItem('nome');\r\n        setUserId(userIdFromStorage);\r\n        setNome(nomeFromStorage);\r\n\r\n        const intervalo = setInterval(() => {\r\n            setHora(getHoraAtual());\r\n        }, 1000);\r\n\r\n        // Limpar intervalo ao desmontar o componente\r\n        return () => clearInterval(intervalo);\r\n    }, []);\r\n\r\n    const registrarPonto = () => {\r\n        const tipoPonto = tpPonto ? 'saída' : 'entrada';\r\n        const novoRegistro = { data: getDataAtual(), hora: getHoraAtual(), tipo: tipoPonto };\r\n        setRegistros([...registros, novoRegistro]);\r\n        setTpPonto(!tpPonto); \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registro de ponto</h2>\r\n            <p>Nome: {nome}</p>\r\n            <p>User ID: {userId}</p>\r\n            <h3>Pontos do dia {data}</h3>\r\n            <h3>Hora: {hora}</h3>\r\n            <button className=\"btn-app-{tpPonto}\" onClick={registrarPonto}>Registrar {tpPonto} as {hora}</button>\r\n            <h3>Registros:</h3>\r\n            <ul>\r\n                {registros.map((registro, index) => (\r\n                    <li key={index}>\r\n                        {registro.data} - {registro.hora} ({registro.tipo})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistroPonto;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}