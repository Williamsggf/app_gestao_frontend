{"ast":null,"code":"var _jsxFileName = \"c:\\\\Estudos probrama\\xE7\\xE3o\\\\My_ponto\\\\My_ponto\\\\frontend\\\\app\\\\src\\\\componentes\\\\Registropt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Função para obter a data atual formatada\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDataAtual = () => {\n  const hoje = new Date();\n  return hoje.toLocaleDateString();\n};\n\n// Função para obter a hora atual formatada\nconst getHoraAtual = () => {\n  const agora = new Date();\n  return agora.toLocaleTimeString();\n};\nfunction RegistroPonto() {\n  _s();\n  const data = getDataAtual();\n  const [hora, setHora] = useState(getHoraAtual());\n  const [userId, setUserId] = useState(null);\n  const [nome, setNome] = useState('');\n  useEffect(() => {\n    const userIdFromStorage = Number(localStorage.getItem('userId'));\n    const nomeFromStorage = localStorage.getItem('nome');\n    setUserId(userIdFromStorage);\n    setNome(nomeFromStorage);\n    const intervalo = setInterval(() => {\n      setHora(getHoraAtual());\n    }, 1000);\n\n    // Limpar intervalo ao desmontar o componente\n    return () => clearInterval(intervalo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nome: \", nome]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Pontos do dia \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hora: \", hora]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistroPonto, \"LsS3PhgzN3gjOD6j6vJDZn9fA1I=\");\n_c = RegistroPonto;\nexport default RegistroPonto;\nvar _c;\n$RefreshReg$(_c, \"RegistroPonto\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getDataAtual","hoje","Date","toLocaleDateString","getHoraAtual","agora","toLocaleTimeString","RegistroPonto","_s","data","hora","setHora","userId","setUserId","nome","setNome","userIdFromStorage","Number","localStorage","getItem","nomeFromStorage","intervalo","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Estudos probramação/My_ponto/My_ponto/frontend/app/src/componentes/Registropt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Função para obter a data atual formatada\r\nconst getDataAtual = () => {\r\n    const hoje = new Date();\r\n    return hoje.toLocaleDateString();\r\n};\r\n\r\n// Função para obter a hora atual formatada\r\nconst getHoraAtual = () => {\r\n    const agora = new Date();\r\n    return agora.toLocaleTimeString();\r\n};\r\n\r\nfunction RegistroPonto() {\r\n    const data = getDataAtual();\r\n    const [hora, setHora] = useState(getHoraAtual());\r\n    const [userId, setUserId] = useState(null);\r\n    const [nome, setNome] = useState('');\r\n\r\n    useEffect(() => {\r\n        const userIdFromStorage = Number(localStorage.getItem('userId'));\r\n        const nomeFromStorage = localStorage.getItem('nome');\r\n        setUserId(userIdFromStorage);\r\n        setNome(nomeFromStorage);\r\n\r\n        const intervalo = setInterval(() => {\r\n            setHora(getHoraAtual());\r\n        }, 1000);\r\n\r\n        // Limpar intervalo ao desmontar o componente\r\n        return () => clearInterval(intervalo);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registro de ponto</h2>\r\n            <p>Nome: {nome}</p>\r\n            <p>User ID: {userId}</p>\r\n            <h3>Pontos do dia {data}</h3>\r\n            <h3>Hora: {hora}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistroPonto;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,OAAOD,IAAI,CAACE,kBAAkB,CAAC,CAAC;AACpC,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,MAAMC,KAAK,GAAG,IAAIH,IAAI,CAAC,CAAC;EACxB,OAAOG,KAAK,CAACC,kBAAkB,CAAC,CAAC;AACrC,CAAC;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGT,YAAY,CAAC,CAAC;EAC3B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACQ,YAAY,CAAC,CAAC,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ,MAAMmB,iBAAiB,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAChE,MAAMC,eAAe,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACpDN,SAAS,CAACG,iBAAiB,CAAC;IAC5BD,OAAO,CAACK,eAAe,CAAC;IAExB,MAAMC,SAAS,GAAGC,WAAW,CAAC,MAAM;MAChCX,OAAO,CAACP,YAAY,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMmB,aAAa,CAACF,SAAS,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B7B,OAAA;MAAAyB,QAAA,GAAG,QAAM,EAACV,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB7B,OAAA;MAAAyB,QAAA,GAAG,WAAS,EAACZ,MAAM;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MAAAyB,QAAA,GAAI,gBAAc,EAACf,IAAI;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7B7B,OAAA;MAAAyB,QAAA,GAAI,QAAM,EAACd,IAAI;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAACpB,EAAA,CA7BQD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}